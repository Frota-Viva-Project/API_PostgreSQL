name: Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: mvn clean test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build application
      run: mvn clean package -DskipTests
      
    - name: Check if JAR was created
      run: |
        if [ ! -f target/*.jar ]; then
          echo "JAR file not found!"
          exit 1
        fi
        echo "JAR file created successfully"
        ls -la target/*.jar

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
    - name: Deploy to Render via Hook
      run: |
        echo "Triggering deployment to Render..."
        response=$(curl -s -w "%{http_code}" -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }})
        http_code="${response: -3}"
        
        if [ "$http_code" -eq 200 ] || [ "$http_code" -eq 201 ]; then
          echo "Deploy triggered successfully!"
        else
          echo "Deploy failed with HTTP code: $http_code"
          exit 1
        fi
        
    - name: Deployment notification
      run: |
        echo "Deployment initiated!"
        echo "Check your Render dashboard for deployment progress."